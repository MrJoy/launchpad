= launchpad

{<img src="https://travis-ci.org/thomasjachmann/launchpad.png?branch=master" alt="Build Status" />}[https://travis-ci.org/thomasjachmann/launchpad]

This gem provides a ruby interface to access novation's launchpad programmatically. LEDs can be lighted and button presses can be responded to. Internally, launchpad's MIDI input/output is used to accomplish this.

The interfaces should be rather stable now (sorry, I changed quite a bit since the last release), so experiment with them and comment on their usability. This still is work in progress. If you need anything or think the interfaces could be improved in any way, please contact me.

Sometimes, the launchpad won't react to anything or react to/light up the wrong LEDs. Don't despair, just dis- and reconnect the thing. It seems that some (unexpected) MIDI signals make it hickup.

== This Fork

* Added ability to handle inputs without spawning a thread per input.
* Modify to support for LaunchPad Mk 2.  Note that this breaks Mk 1 support!
    * Recognize identity string from this model.
    * Fix X/Y coordinates for buttons.
    * Add support for RGB colors.


== More Info

If you don't know what launchpad is, visit:

* Novation's site at http://de.novationmusic.com/products/midi_controller/launchpad
* my demo videos for this library at http://www.youtube.com/thomasjachmann
* other demos on youtube http://www.youtube.com/results?search_query=novation+launchpad

If you're into other languages or want to know what goes on behind the scenes MIDI wise, have a look at:

* Novation's MIDI programmer's reference at {www.novationmusic.com/support/launchpad}[http://www.novationmusic.com/support/launchpad/] (bottom of the page)
* Tobi Tobes' port of my gem to processing at http://github.com/rngtng/launchpad


== Requirements

* Roger B. Dannenberg's {portmidi library}[http://sourceforge.net/projects/portmedia/]
* Jan Krutisch's {portmidi gem}[http://github.com/halfbyte/portmidi]


== Compatibility

The gem is known to be compatible with the following ruby versions:

* MRI 2.2.2


== Installation

The gem is hosted on RubyGems[https://rubygems.org/], so in order to use it, you're gonna gem install it:

  gem install launchpad


== Usage

There are two main entry points:

* require 'launchpad/device', providing Launchpad::Device, which handles all the basic input/output stuff
* require 'launchpad/interaction' or just 'launchpad', additionally providing Launchpad::Interaction, which lets you respond to actions (button presses/releases)

This is a simple example (only requiring the device for output) that switches on all LEDs (for testing), resets the launchpad again and then lights the grid button at position 4/4 (from top left).

  require 'launchpad/device'

  device = Launchpad::Device.new
  device.test_leds
  sleep 1
  device.reset
  sleep 1
  device.change :grid, :x => 4, :y => 4, :red => :high, :green => :low

This is an interaction example lighting all grid buttons in red when pressed and keeping them lit.

  require 'launchpad'

  interaction = Launchpad::Interaction.new
  interaction.response_to(:grid, :down) do |interaction, action|
    interaction.device.change(:grid, action.merge(:red => :high))
  end
  interaction.response_to(:mixer, :down) do |interaction, action|
    interaction.stop
  end

  interaction.start


For more details, see the examples. examples/color_picker.rb is the most complex example with interaction.


== Future plans

* bitmap rendering
* internal tracking of LED states for both buffers


== Changelog

=== v.0.3.0

* logging
* reworked multi threading for action handling
* compatibility with ruby 1.8.7 and 2.0.0
* interaction responses for presses on single grid buttons/button areas/columns/rows

=== v.0.2.2

* single threading fix: prevent ThreadError when Launchpad::Interaction#stop is called within an action response

=== v.0.2.1

* Launchpad::Interaction#close now properly stops interaction first
* multi threading: Launchpad::Interaction#start method can be called with :detached => true to allow calling thread to continue

=== v.0.2.0

* double buffering (see Launchpad::Device#buffering_mode)
* don't update grid button 0,0 before change_all (in order to reset rapid update pointer), use MIDI message without visual effect
* (at least) doubled the speed of change_all by not sending each message individually but sending them in one go (as an array)

=== v0.1.1

* ability to close device/interaction to free portmidi resources
* ability to initialize devices using device ids as well as device names
* complete documentation for http://rdoc.info/projects/thomasjachmann/launchpad

=== v0.1.0

* first feature complete version with kinda stable API


== Copyright

Copyright (c) 2009 Thomas Jachmann. See LICENSE for details.
